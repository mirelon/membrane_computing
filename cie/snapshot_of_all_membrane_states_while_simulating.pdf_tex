%% Creator: Inkscape inkscape 0.48.4, www.inkscape.org
%% PDF/EPS/PS + LaTeX output extension by Johan Engelen, 2010
%% Accompanies image file 'snapshot_of_all_membrane_states_while_simulating.pdf' (pdf, eps, ps)
%%
%% To include the image in your LaTeX document, write
%%   \input{<filename>.pdf_tex}
%%  instead of
%%   \includegraphics{<filename>.pdf}
%% To scale the image, write
%%   \def\svgwidth{<desired width>}
%%   \input{<filename>.pdf_tex}
%%  instead of
%%   \includegraphics[width=<desired width>]{<filename>.pdf}
%%
%% Images with a different path to the parent latex file can
%% be accessed with the `import' package (which may need to be
%% installed) using
%%   \usepackage{import}
%% in the preamble, and then including the image with
%%   \import{<path to file>}{<filename>.pdf_tex}
%% Alternatively, one can specify
%%   \graphicspath{{<path to file>/}}
%% 
%% For more information, please see info/svg-inkscape on CTAN:
%%   http://tug.ctan.org/tex-archive/info/svg-inkscape
%%
\tiny
\begingroup%
  \makeatletter%
  \providecommand\color[2][]{%
    \errmessage{(Inkscape) Color is used for the text in Inkscape, but the package 'color.sty' is not loaded}%
    \renewcommand\color[2][]{}%
  }%
  \providecommand\transparent[1]{%
    \errmessage{(Inkscape) Transparency is used (non-zero) for the text in Inkscape, but the package 'transparent.sty' is not loaded}%
    \renewcommand\transparent[1]{}%
  }%
  \providecommand\rotatebox[2]{#2}%
  \ifx\svgwidth\undefined%
    \setlength{\unitlength}{720bp}%
    \ifx\svgscale\undefined%
      \relax%
    \else%
      \setlength{\unitlength}{\unitlength * \real{\svgscale}}%
    \fi%
  \else%
    \setlength{\unitlength}{\svgwidth}%
  \fi%
  \global\let\svgwidth\undefined%
  \global\let\svgscale\undefined%
  \makeatother%
  \begin{picture}(1,0.75)%
    \put(0,0){\includegraphics[width=\unitlength]{snapshot_of_all_membrane_states_while_simulating.pdf}}%
    \put(0.035,0.71031146){\makebox(0,0)[lb]{\smash{\textcolor{synchronize}{SYNCHRONIZE}}}}%
    \put(0.078,0.62032504){\makebox(0,0)[lb]{\smash{\textcolor{run}{RUN}}}}%
    \put(0.055,0.53033725){\makebox(0,0)[lb]{\smash{\textcolor{restore}{RESTORE}}}}%
    \put(0.035,0.33128361){\makebox(0,0)[lb]{\smash{\textcolor{synchronize}{SYNCHRONIZE}}}}%
    \put(0.045,0.43080906){\makebox(0,0)[lb]{\smash{\textcolor{senddown}{SENDDOWN}}}}%
    \put(0.10336942,0.408){\color[rgb]{0,0,0}\makebox(0,0)[lt]{\begin{minipage}{0.12808819\unitlength}\raggedright waiting for SYNCED / SYNCTOKENs\end{minipage}}}%
    \put(0.10561659,0.595){\color[rgb]{0,0,0}\makebox(0,0)[lt]{\begin{minipage}{0.10224584\unitlength}\raggedright sends down SYNCED\end{minipage}}}%
    \small
    \put(0.81010165,0.71122658){\color[rgb]{0,0,0}\makebox(0,0)[lt]{\begin{minipage}{0.18089649\unitlength}\raggedright \textcolor{run}{Sending to parent region is allowed only in regions in RUN phase}\end{minipage}}}%
    \put(0.81010165,0.59549776){\color[rgb]{0,0,0}\makebox(0,0)[lt]{\begin{minipage}{0.18089649\unitlength}\raggedright \textcolor{senddown}{Sending to child regions is allowed only in regions in SENDDOWN phase}\end{minipage}}}%
  \end{picture}%
\endgroup%
\normalsize